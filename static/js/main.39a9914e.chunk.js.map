{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","timer","setInterval","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","showBtnClick","hideBtnClick","renameBtnClick","Math","random","className","type","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAVP,gCAaE,SAAmBS,GACbN,KAAKO,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,wBAA6BL,KAAKO,MAAMC,SAhB9C,kCAoBE,WACEC,cAAcT,KAAKC,SArBvB,oBAwBE,WACE,OACE,2CAEG,IACAD,KAAKJ,MAAMC,UA7BpB,GAA2Ba,IAAMC,YCgElBC,E,4MA7DbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,aAAe,WACb,EAAKZ,SAAS,CAAEU,gBAAgB,K,EAGlCG,aAAe,WACb,EAAKb,SAAS,CAAEU,gBAAgB,K,EAGlCI,eAAiB,WACf,EAAKd,SAAS,CAAEW,UAAWI,KAAKC,Y,4CAGlC,WACE,OACE,yBAAKC,UAAU,OACb,4CAEIpB,KAAKJ,MAAMiB,gBAET,4BACEQ,KAAK,SACLC,GAAG,UACHC,QAASvB,KAAKe,cAHhB,cAUHf,KAAKJ,MAAMiB,gBAER,4BACEQ,KAAK,SACLC,GAAG,UACHC,QAASvB,KAAKgB,cAHhB,cASN,4BACEK,KAAK,SACLC,GAAG,YACHC,QAASvB,KAAKiB,gBAHhB,UAQGjB,KAAKJ,MAAMiB,gBACN,kBAAC,EAAD,CAAOL,KAAMR,KAAKJ,MAAMkB,iB,GAvDtBJ,IAAMC,WCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.39a9914e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`Current name: ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  showBtnClick = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideBtnClick = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  renameBtnClick = () => {\n    this.setState({ clockName: Math.random() });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {\n          (!this.state.isClockVisible\n            && (\n              <button\n                type=\"button\"\n                id=\"showBtn\"\n                onClick={this.showBtnClick}\n              >\n                Show Clock\n              </button>\n            ))}\n\n        {\n          (this.state.isClockVisible\n            && (\n              <button\n                type=\"button\"\n                id=\"hideBtn\"\n                onClick={this.hideBtnClick}\n              >\n                Hide Clock\n              </button>\n            ))}\n\n        <button\n          type=\"button\"\n          id=\"renameBtn\"\n          onClick={this.renameBtnClick}\n        >\n          Rename\n        </button>\n        {\n          (this.state.isClockVisible\n            && (<Clock name={this.state.clockName} />))\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}